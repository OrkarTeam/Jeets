
  // API endpoint URL
  const apiUrl = 'https://api.dexscreener.com/latest/dex/pairs/solana/4GAELB8HpQSrpHDdupVGt1VmwN6zqFjKSJ2ALVmReoqs';

  // Function to fetch data from the API and update the HTML elements
  async function fetchData() {
    try {
      const response = await fetch(apiUrl);
      const data = await response.json();

      const pair = data.pair;

      // Update the token name
      document.getElementById('tokenName').textContent = pair.baseToken.name;

      // Update the token symbol
      document.getElementById('tokenSymbol').textContent = pair.baseToken.symbol;

      // Update the token image
      document.getElementById('tokenImage').src = pair.info.imageUrl;

      // Update the mint address
      document.getElementById('mintAddress').textContent = pair.baseToken.address;

      // Update the social media links
      const socialMediaLinks = {
        twitter: pair.info.socials.find(social => social.type === 'twitter')?.url,
        telegram: pair.info.socials.find(social => social.type === 'telegram')?.url
      };

      // Function to create a social media button
      function createSocialMediaButton(platform, link) {
        const buttonElement = document.createElement('a');
        buttonElement.href = link;
        buttonElement.target = '_blank';

        const buttonContent = document.createElement('button');
        buttonContent.className = platform;
        buttonContent.innerHTML = `<svg><!-- ... (SVG code for the platform icon) ... --></svg>`;

        buttonElement.appendChild(buttonContent);
        return buttonElement;
      }

      // Get the container element for social media buttons
      const socialMediaContainer = document.querySelector('.Media');

      // Clear existing social media buttons
      socialMediaContainer.innerHTML = '';

      // Create and append social media buttons based on available links
      for (const [platform, link] of Object.entries(socialMediaLinks)) {
        if (link) {
          const buttonElement = createSocialMediaButton(platform, link);
          socialMediaContainer.appendChild(buttonElement);
        }
      }
    } catch (error) {
      console.error('Error fetching data:', error);
    }
  }

  // Function to update the price and price change percentage
  async function updatePriceData() {
    try {
      const response = await fetch(apiUrl);
      const data = await response.json();

      const pair = data.pair;

      // Update the token price
      document.querySelector('.Price').textContent = '$' + pair.priceUsd;

      // Update the price change percentage
      const priceChangePercentage = pair.priceChange.h24.toFixed(2);
      document.querySelector('.PriceMove').textContent = priceChangePercentage + '%';
    } catch (error) {
      console.error('Error fetching price data:', error);
    }
  }

  // Call the fetchData function when the page loads
  window.addEventListener('load', fetchData);

  // Call the updatePriceData function every second
  setInterval(updatePriceData, 500);
